#!/bin/sh
#
# Start/stop ovirt-optimizer
#
# chkconfig: - 65 34
# description: ovirt optimizer service
# pidfile: /var/run/ovirt-optimizer.pid

### BEGIN INIT INFO
# Provides: ovirt-engine-jboss-as-standalone
# Short-Description: oVirt Engine JBoss As Standalone
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

NAME="ovirt-optimizer"
PROG="ovirt optimizer service"

RETVAL=0
LOCKFILE="/var/lock/subsys/${NAME}"
PIDFILE="${PIDFILE:-/var/run/${NAME}.pid}"

# See how we were called.
case "$1" in
    start)
        if [ `id -u` -ne 0 ]; then
            echo $"Insufficient privilege" 1>&2
            exit 4
        fi
        echo -n $"Starting $PROG: "
        ulimit -n ${FILENO:-65535}
        touch "${PIDFILE}"
        status -p "${PIDFILE}" "${NAME}" | grep -q "is running\|正在运行"
        if [ $? -ne 0 ]; then
            java -server -XX:+TieredCompilation -Xms256m -Xmx512m -XX:PermSize=256m -XX:MaxPermSize=256m -Djava.net.preferIPv4Stack=true -Dsun.rmi.dgc.client.gcInterval=3600000 -Dsun.rmi.dgc.server.gcInterval=3600000 -Djava.awt.headless=true -Djava.util.logging.manager=org.jboss.logmanager -Dorg.jboss.resolver.warning=true -Djboss.modules.system.pkgs=org.jboss.byteman -Djboss.modules.write-indexes=false -Djboss.server.default.config=ovirt-optimizer -Djboss.home.dir=/usr/share/ovirt-engine-jboss-as -Djboss.server.config.dir=/etc/ovirt-optimizer -jar /usr/share/ovirt-engine-jboss-as/jboss-modules.jar -mp /usr/share/ovirt-engine-jboss-as/modules -jaxpmodule javax.xml.jaxp-provider org.jboss.as.standalone -c ovirt-optimizer.xml &>> /var/log/ovirt-optimizer/ovirt-optimizer.log &
            RETVAL=$!
            echo $! > ${PIDFILE}
            [ $RETVAL -ne 0 -a ! -s "${PIDFILE}" ] && rm -f "${PIDFILE}"
            sleep 1
        fi
        echo -n "                "
        status -p "${PIDFILE}" "${NAME}" | grep -q "is running\|正在运行"
        if [ $? -eq 0 ]; then
            echo -e "[  \033[32mOK\033[0m  ]"
        else
            echo -e "\031[32m[FAILED]\033[0m"
        fi
        ;;
    stop)
        echo -n $"Stopping $PROG: "
        killproc -p "${PIDFILE}" -d 60
        RETVAL=$?
        echo
        [ $RETVAL -eq 0 ] && rm -f "${LOCKFILE}"
        ;;
    status)
        source /etc/init.d/functions
        export LANG=en_US.UTF-8
        status -p "${PIDFILE}" "${NAME}"
        RETVAL=$?
        ;;
    restart)
        $0 stop
        $0 start
        RETVAL=$?
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart}"
        exit 2
        ;;
esac

exit $RETVAL

